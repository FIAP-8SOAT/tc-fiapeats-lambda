name: Deploy AWS Lambda with Terraform

on:
  push:
    branches:
      - main  # Alterar para a branch que deseja monitorar

jobs:
  deploy:
    name: Build and Deploy Lambda
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean package

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Initialize Terraform
      run: |
        cd terraform
        terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Validate Terraform
      run: |
        cd terraform
        terraform validate
    
    - name: Determine Action Based on Variable
      id: determine_action
      run: |
        cd terraform
        destroy_infra=$(grep 'destroy_infra' terraform.tfvars | cut -d '=' -f2 | tr -d ' ')
        if [ "$destroy_infra" = "true" ]; then
          echo "Infrastructure will be destroyed."
          echo "action=destroy" >> $GITHUB_ENV
        else
          echo "Infrastructure will be applied."
          echo "action=apply" >> $GITHUB_ENV
        fi

    - name: Plan Terraform
      run: |
        cd terraform
        if [ "$action" == "destroy" ]; then
          terraform plan -destroy -var-file="terraform.tfvars" -out=tfplan
        else
          terraform plan -var-file="terraform.tfvars" -out=tfplan
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Apply Terraform
      run: |
        cd terraform
        if [ "$action" == "destroy" ]; then
          terraform destroy -auto-approve -var-file="terraform.tfvars"
        else
          terraform apply -auto-approve tfplan
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}